using System.Text;
using System.Security.Cryptography;

namespace Reddit_app
{
    public static class Sha256Hash
    {
        public static string ComputeSha256Hash(string rawData)
        {
            using (SHA256 sha256Hash = SHA256.Create())
            {
                byte[] bytes = sha256Hash.ComputeHash(Encoding.UTF8.GetBytes(rawData));
                StringBuilder builder = new StringBuilder();
                foreach (byte b in bytes)
                {
                    builder.Append(b.ToString("x2")); // Convert to hex
                }
                return builder.ToString();
            }
        }
    }
    public class RedditUser
    {
        readonly Guid uuid = Guid.NewGuid();
        public string username;
        private string passwordHash;

        public RedditUser(string name, string pass)
        {
            username = name;
            passwordHash = Sha256Hash.ComputeSha256Hash(pass);
        }

        public bool CheckPass(string password)
        {
            string hash = Sha256Hash.ComputeSha256Hash(password);
            return passwordHash == hash;
        }
        public void ChangePass(string password)
        {
            string hash = Sha256Hash.ComputeSha256Hash(password);
            passwordHash = hash;
        }
        public bool CheckUsernameExists(string name)
        {
            RedditUser u=RedditModel.instance.GetRedditUserByUsername(name);
            if (u != null) { return true; }
            return false;
              
        }
        public bool ChangeUsername(string name)
        {
            if (CheckUsernameExists(name)) return false;  
            username = name; return true;
        }
    }
    }
