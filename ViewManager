
namespace Reddit_app
{
    internal class ViewManager
    {
        public const int loggedOut = 0;
        public const int loggedIn = 1;
        public ViewManager()
        {
            views.Add(loggedOut, new LoggedOutView(this));
            views.Add(loggedIn, new LoggedInView(this));

            currentView = views[loggedOut];
        }
       /* public static ViewManager instance { get { return Nested.instance; } }
        private class Nested
        {
            static Nested()
            {
            }

            internal static readonly ViewManager instance = new ViewManager();
        }
       */
        
        public RedditUser currentUser = null;
        private Dictionary<int, View> views = new Dictionary<int, View>();
        public View currentView;
       
        public void SwitchToView(int viewId)
        {   
            if (views.ContainsKey(viewId)) { 
                currentView = views[viewId];
            currentView.Run(); }
            else
                Console.WriteLine("Unknown view: " + viewId);
        }
    }
    }

